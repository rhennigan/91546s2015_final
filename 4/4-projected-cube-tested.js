// Generated by CoffeeScript 1.9.1
(function() {
  var BLUE, GRAY, GREEN, Main, RED, cgl, main,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  RED = new CoffeeGL.Colour.RGB(0.839216, 0.290196, 0.152941);

  GREEN = new CoffeeGL.Colour.RGB(0.4, 0.796078, 0.223529);

  BLUE = new CoffeeGL.Colour.RGB(0.0470588, 0.352941, 0.505882);

  GRAY = new CoffeeGL.Colour.RGB(0.556863, 0.678431, 0.670588);

  Main = (function() {
    function Main() {
      this.draw = bind(this.draw, this);
      this.update = bind(this.update, this);
      this.init = bind(this.init, this);
    }

    Main.prototype.init = function() {
      var cn, col, h, req, res, seg, th;
      this.top = new CoffeeGL.Node();
      req = new CoffeeGL.Request('4-projected-cube-tested.glsl');
      req.get((function(_this) {
        return function(data) {
          _this.shader = new CoffeeGL.Shader(data);
          _this.shader.bind();
          return _this.shader.setUniform3v("uAmbientLightingColor", new CoffeeGL.Colour.RGB(0.1, 0.1, 0.1));
        };
      })(this));
      this.camera = new CoffeeGL.Camera.MousePerspCamera(new CoffeeGL.Vec3(0, 0, 25));
      this.top.add(this.camera);
      this.light1 = new CoffeeGL.Light.PointLight(new CoffeeGL.Vec3(1, 0, 0), RED);
      this.top.add(this.light1);
      th = 0.1;
      res = 10;
      seg = 8;
      h = 2;
      col = new CoffeeGL.Colour.RGB(0.5, 0.5, 0.5);
      this.c = new CoffeeGL.Shapes.Cylinder(th, res, seg, h, col);
      cn = new CoffeeGL.Node(this.c);
      this.top.add(cn);
      cn.matrix.translate(new CoffeeGL.Vec3(-1, -1, 0));
      GL.enable(GL.CULL_FACE);
      GL.cullFace(GL.BACK);
      return GL.enable(GL.DEPTH_TEST);
    };

    Main.prototype.update = function(dt) {
      return this.light1.pos = this.camera.pos;
    };

    Main.prototype.draw = function() {
      GL.clearColor(0.15, 0.15, 0.15, 1.0);
      GL.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);
      if (this.top != null) {
        return this.top.draw();
      }
    };

    return Main;

  })();

  main = new Main();

  cgl = new CoffeeGL.App('webgl-canvas', main, main.init, main.draw, main.update);

}).call(this);

//# sourceMappingURL=4-projected-cube-tested.js.map
